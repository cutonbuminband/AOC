#+PROPERTY: header-args:jupyter-python  :session aoc :kernel python
#+PROPERTY: header-args    :pandoc t

* Imports
#+begin_src jupyter-python
import pandas as pd
import numpy as np
from collections import defaultdict
from pathlib import Path
import functools
datadir = Path("data/2022")
#+end_src

* Day 1
** Text
The Elves take turns writing down the number of Calories contained by the various meals, snacks, rations, etc. that they've brought with them, one item per line. Each Elf separates their own inventory from the previous Elf's inventory (if any) by a blank line.

** Part 1
Find the Elf carrying the most Calories. How many total Calories is that Elf carrying?

#+begin_src jupyter-python
  elves = [x.split("\n") for x in open(datadir / "1.txt", "r", encoding="utf8").read().split("\n\n")]
  max([sum([int(y) for y in x if y]) for x in elves])
#+end_src

** Part 2
By the time you calculate the answer to the Elves' question, they've already realized that the Elf carrying the most Calories of food might eventually run out of snacks.

To avoid this unacceptable situation, the Elves would instead like to know the total Calories carried by the top three Elves carrying the most Calories. That way, even if one of those Elves runs out of snacks, they still have two backups.

#+begin_src jupyter-python
  sum(sorted([sum([int(y) for y in x if y]) for x in elves])[-3:])
#+end_src

